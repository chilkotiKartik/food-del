export function isBranch(branch: any): boolean;
export function branch(root: any): Branch;
export function isItem(item: any): boolean;
export function item(detail: any): Item;
export function normalizeBranch(branch: any): any;
export function normalizeItem(item: any): {
    id: any;
    node: {
        id: any;
        type: any;
        props: any;
        childIds: any;
        parentId: any;
    };
    meta: any;
    index: any;
    index_list: any;
};
export function plainBranch(branch: any): any;
export { nanoid as itemid };
declare class Branch {
    constructor(root: any, children?: any[]);
    root: any;
    children: any[];
    with_child(child: any): Branch;
}
declare class Item {
    constructor(detail: any, meta: any, indexes: any, indexes_list: any);
    detail: any;
    meta: any;
    indexes: any;
    indexes_list: any;
    with_meta(meta: any): Item;
    with_index(...indexes: any[]): Item;
    with_index_list(...indexes: any[]): Item;
}
import { nanoid } from "@reduxjs/toolkit";
